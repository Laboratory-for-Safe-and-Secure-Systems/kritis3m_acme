name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pull-requests: read
  repository-projects: read

jobs:
  build:
    runs-on: ubuntu-22.04  # Use a faster runner
    steps:
    - uses: actions/checkout@v4

    - name: Install KRITIS3M Dependencies
      run: |
        # Fetch the asset URL from GitHub API
        ASSET_URL=$(curl -s -H "Authorization: token ${{ secrets.ORG_ACCESS_TOKEN }}" \
          "https://api.github.com/repos/Laboratory-for-Safe-and-Secure-Systems/kritis3m_workspace/releases/latest" \
          | jq -r '.assets[]
          | select(.name | startswith("kritis3m-dependencies-"))
          | .url'
          )
        echo "Downloading dependencies from $ASSET_URL"

        # Download the release asset from the private repo
        curl -sSL -H "Authorization: token ${{ secrets.ORG_ACCESS_TOKEN }}" \
          -H "Accept: application/octet-stream" \
          "$ASSET_URL" -o /tmp/kritis3m-dependencies.tar.gz

        # Extract dependencies to /usr/local/lib
        sudo tar -xf /tmp/kritis3m-dependencies.tar.gz -C /
        sudo ldconfig

        # List extracted files
        ls -la /usr/local/lib

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Cache Go Build
      uses: actions/cache@v3
      with:
        path: ~/.cache/go-build
        key: ${{ runner.os }}-gobuild-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-gobuild-

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build
      run: go build -v ./...
